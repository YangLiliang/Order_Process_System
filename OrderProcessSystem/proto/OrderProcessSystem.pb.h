// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: OrderProcessSystem.proto

#ifndef PROTOBUF_INCLUDED_OrderProcessSystem_2eproto
#define PROTOBUF_INCLUDED_OrderProcessSystem_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_OrderProcessSystem_2eproto 

namespace protobuf_OrderProcessSystem_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_OrderProcessSystem_2eproto
namespace OPS {
class CancelOrderRequest;
class CancelOrderRequestDefaultTypeInternal;
extern CancelOrderRequestDefaultTypeInternal _CancelOrderRequest_default_instance_;
class ExecutionReport;
class ExecutionReportDefaultTypeInternal;
extern ExecutionReportDefaultTypeInternal _ExecutionReport_default_instance_;
class NewOrderRequest;
class NewOrderRequestDefaultTypeInternal;
extern NewOrderRequestDefaultTypeInternal _NewOrderRequest_default_instance_;
}  // namespace OPS
namespace google {
namespace protobuf {
template<> ::OPS::CancelOrderRequest* Arena::CreateMaybeMessage<::OPS::CancelOrderRequest>(Arena*);
template<> ::OPS::ExecutionReport* Arena::CreateMaybeMessage<::OPS::ExecutionReport>(Arena*);
template<> ::OPS::NewOrderRequest* Arena::CreateMaybeMessage<::OPS::NewOrderRequest>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace OPS {

enum NewOrderRequest_OrderType {
  NewOrderRequest_OrderType_LIMIT = 0,
  NewOrderRequest_OrderType_CURRENT = 1,
  NewOrderRequest_OrderType_NewOrderRequest_OrderType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NewOrderRequest_OrderType_NewOrderRequest_OrderType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NewOrderRequest_OrderType_IsValid(int value);
const NewOrderRequest_OrderType NewOrderRequest_OrderType_OrderType_MIN = NewOrderRequest_OrderType_LIMIT;
const NewOrderRequest_OrderType NewOrderRequest_OrderType_OrderType_MAX = NewOrderRequest_OrderType_CURRENT;
const int NewOrderRequest_OrderType_OrderType_ARRAYSIZE = NewOrderRequest_OrderType_OrderType_MAX + 1;

const ::google::protobuf::EnumDescriptor* NewOrderRequest_OrderType_descriptor();
inline const ::std::string& NewOrderRequest_OrderType_Name(NewOrderRequest_OrderType value) {
  return ::google::protobuf::internal::NameOfEnum(
    NewOrderRequest_OrderType_descriptor(), value);
}
inline bool NewOrderRequest_OrderType_Parse(
    const ::std::string& name, NewOrderRequest_OrderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NewOrderRequest_OrderType>(
    NewOrderRequest_OrderType_descriptor(), name, value);
}
enum NewOrderRequest_Direction {
  NewOrderRequest_Direction_SELL = 0,
  NewOrderRequest_Direction_BUY = 1,
  NewOrderRequest_Direction_NewOrderRequest_Direction_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  NewOrderRequest_Direction_NewOrderRequest_Direction_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool NewOrderRequest_Direction_IsValid(int value);
const NewOrderRequest_Direction NewOrderRequest_Direction_Direction_MIN = NewOrderRequest_Direction_SELL;
const NewOrderRequest_Direction NewOrderRequest_Direction_Direction_MAX = NewOrderRequest_Direction_BUY;
const int NewOrderRequest_Direction_Direction_ARRAYSIZE = NewOrderRequest_Direction_Direction_MAX + 1;

const ::google::protobuf::EnumDescriptor* NewOrderRequest_Direction_descriptor();
inline const ::std::string& NewOrderRequest_Direction_Name(NewOrderRequest_Direction value) {
  return ::google::protobuf::internal::NameOfEnum(
    NewOrderRequest_Direction_descriptor(), value);
}
inline bool NewOrderRequest_Direction_Parse(
    const ::std::string& name, NewOrderRequest_Direction* value) {
  return ::google::protobuf::internal::ParseNamedEnum<NewOrderRequest_Direction>(
    NewOrderRequest_Direction_descriptor(), name, value);
}
enum ExecutionReport_STAT {
  ExecutionReport_STAT_ORDER_ACCEPT = 0,
  ExecutionReport_STAT_ORDER_REJECT = 1,
  ExecutionReport_STAT_FILL = 2,
  ExecutionReport_STAT_CANCELED = 3,
  ExecutionReport_STAT_CANCEL_REJECT = 4,
  ExecutionReport_STAT_ExecutionReport_STAT_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ExecutionReport_STAT_ExecutionReport_STAT_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ExecutionReport_STAT_IsValid(int value);
const ExecutionReport_STAT ExecutionReport_STAT_STAT_MIN = ExecutionReport_STAT_ORDER_ACCEPT;
const ExecutionReport_STAT ExecutionReport_STAT_STAT_MAX = ExecutionReport_STAT_CANCEL_REJECT;
const int ExecutionReport_STAT_STAT_ARRAYSIZE = ExecutionReport_STAT_STAT_MAX + 1;

const ::google::protobuf::EnumDescriptor* ExecutionReport_STAT_descriptor();
inline const ::std::string& ExecutionReport_STAT_Name(ExecutionReport_STAT value) {
  return ::google::protobuf::internal::NameOfEnum(
    ExecutionReport_STAT_descriptor(), value);
}
inline bool ExecutionReport_STAT_Parse(
    const ::std::string& name, ExecutionReport_STAT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ExecutionReport_STAT>(
    ExecutionReport_STAT_descriptor(), name, value);
}
// ===================================================================

class NewOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPS.NewOrderRequest) */ {
 public:
  NewOrderRequest();
  virtual ~NewOrderRequest();

  NewOrderRequest(const NewOrderRequest& from);

  inline NewOrderRequest& operator=(const NewOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  NewOrderRequest(NewOrderRequest&& from) noexcept
    : NewOrderRequest() {
    *this = ::std::move(from);
  }

  inline NewOrderRequest& operator=(NewOrderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const NewOrderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const NewOrderRequest* internal_default_instance() {
    return reinterpret_cast<const NewOrderRequest*>(
               &_NewOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(NewOrderRequest* other);
  friend void swap(NewOrderRequest& a, NewOrderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline NewOrderRequest* New() const final {
    return CreateMaybeMessage<NewOrderRequest>(NULL);
  }

  NewOrderRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<NewOrderRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const NewOrderRequest& from);
  void MergeFrom(const NewOrderRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(NewOrderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef NewOrderRequest_OrderType OrderType;
  static const OrderType LIMIT =
    NewOrderRequest_OrderType_LIMIT;
  static const OrderType CURRENT =
    NewOrderRequest_OrderType_CURRENT;
  static inline bool OrderType_IsValid(int value) {
    return NewOrderRequest_OrderType_IsValid(value);
  }
  static const OrderType OrderType_MIN =
    NewOrderRequest_OrderType_OrderType_MIN;
  static const OrderType OrderType_MAX =
    NewOrderRequest_OrderType_OrderType_MAX;
  static const int OrderType_ARRAYSIZE =
    NewOrderRequest_OrderType_OrderType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OrderType_descriptor() {
    return NewOrderRequest_OrderType_descriptor();
  }
  static inline const ::std::string& OrderType_Name(OrderType value) {
    return NewOrderRequest_OrderType_Name(value);
  }
  static inline bool OrderType_Parse(const ::std::string& name,
      OrderType* value) {
    return NewOrderRequest_OrderType_Parse(name, value);
  }

  typedef NewOrderRequest_Direction Direction;
  static const Direction SELL =
    NewOrderRequest_Direction_SELL;
  static const Direction BUY =
    NewOrderRequest_Direction_BUY;
  static inline bool Direction_IsValid(int value) {
    return NewOrderRequest_Direction_IsValid(value);
  }
  static const Direction Direction_MIN =
    NewOrderRequest_Direction_Direction_MIN;
  static const Direction Direction_MAX =
    NewOrderRequest_Direction_Direction_MAX;
  static const int Direction_ARRAYSIZE =
    NewOrderRequest_Direction_Direction_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Direction_descriptor() {
    return NewOrderRequest_Direction_descriptor();
  }
  static inline const ::std::string& Direction_Name(Direction value) {
    return NewOrderRequest_Direction_Name(value);
  }
  static inline bool Direction_Parse(const ::std::string& name,
      Direction* value) {
    return NewOrderRequest_Direction_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string stockID = 3;
  void clear_stockid();
  static const int kStockIDFieldNumber = 3;
  const ::std::string& stockid() const;
  void set_stockid(const ::std::string& value);
  #if LANG_CXX11
  void set_stockid(::std::string&& value);
  #endif
  void set_stockid(const char* value);
  void set_stockid(const char* value, size_t size);
  ::std::string* mutable_stockid();
  ::std::string* release_stockid();
  void set_allocated_stockid(::std::string* stockid);

  // string time = 7;
  void clear_time();
  static const int kTimeFieldNumber = 7;
  const ::std::string& time() const;
  void set_time(const ::std::string& value);
  #if LANG_CXX11
  void set_time(::std::string&& value);
  #endif
  void set_time(const char* value);
  void set_time(const char* value, size_t size);
  ::std::string* mutable_time();
  ::std::string* release_time();
  void set_allocated_time(::std::string* time);

  // uint64 clientID = 1;
  void clear_clientid();
  static const int kClientIDFieldNumber = 1;
  ::google::protobuf::uint64 clientid() const;
  void set_clientid(::google::protobuf::uint64 value);

  // .OPS.NewOrderRequest.Direction direction = 2;
  void clear_direction();
  static const int kDirectionFieldNumber = 2;
  ::OPS::NewOrderRequest_Direction direction() const;
  void set_direction(::OPS::NewOrderRequest_Direction value);

  // uint32 orderQty = 4;
  void clear_orderqty();
  static const int kOrderQtyFieldNumber = 4;
  ::google::protobuf::uint32 orderqty() const;
  void set_orderqty(::google::protobuf::uint32 value);

  // double price = 5;
  void clear_price();
  static const int kPriceFieldNumber = 5;
  double price() const;
  void set_price(double value);

  // .OPS.NewOrderRequest.OrderType orderType = 6;
  void clear_ordertype();
  static const int kOrderTypeFieldNumber = 6;
  ::OPS::NewOrderRequest_OrderType ordertype() const;
  void set_ordertype(::OPS::NewOrderRequest_OrderType value);

  // @@protoc_insertion_point(class_scope:OPS.NewOrderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr stockid_;
  ::google::protobuf::internal::ArenaStringPtr time_;
  ::google::protobuf::uint64 clientid_;
  int direction_;
  ::google::protobuf::uint32 orderqty_;
  double price_;
  int ordertype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_OrderProcessSystem_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CancelOrderRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPS.CancelOrderRequest) */ {
 public:
  CancelOrderRequest();
  virtual ~CancelOrderRequest();

  CancelOrderRequest(const CancelOrderRequest& from);

  inline CancelOrderRequest& operator=(const CancelOrderRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CancelOrderRequest(CancelOrderRequest&& from) noexcept
    : CancelOrderRequest() {
    *this = ::std::move(from);
  }

  inline CancelOrderRequest& operator=(CancelOrderRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CancelOrderRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CancelOrderRequest* internal_default_instance() {
    return reinterpret_cast<const CancelOrderRequest*>(
               &_CancelOrderRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CancelOrderRequest* other);
  friend void swap(CancelOrderRequest& a, CancelOrderRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CancelOrderRequest* New() const final {
    return CreateMaybeMessage<CancelOrderRequest>(NULL);
  }

  CancelOrderRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CancelOrderRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CancelOrderRequest& from);
  void MergeFrom(const CancelOrderRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CancelOrderRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string time = 2;
  void clear_time();
  static const int kTimeFieldNumber = 2;
  const ::std::string& time() const;
  void set_time(const ::std::string& value);
  #if LANG_CXX11
  void set_time(::std::string&& value);
  #endif
  void set_time(const char* value);
  void set_time(const char* value, size_t size);
  ::std::string* mutable_time();
  ::std::string* release_time();
  void set_allocated_time(::std::string* time);

  // uint64 orderID = 1;
  void clear_orderid();
  static const int kOrderIDFieldNumber = 1;
  ::google::protobuf::uint64 orderid() const;
  void set_orderid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:OPS.CancelOrderRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr time_;
  ::google::protobuf::uint64 orderid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_OrderProcessSystem_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExecutionReport : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OPS.ExecutionReport) */ {
 public:
  ExecutionReport();
  virtual ~ExecutionReport();

  ExecutionReport(const ExecutionReport& from);

  inline ExecutionReport& operator=(const ExecutionReport& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExecutionReport(ExecutionReport&& from) noexcept
    : ExecutionReport() {
    *this = ::std::move(from);
  }

  inline ExecutionReport& operator=(ExecutionReport&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExecutionReport& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExecutionReport* internal_default_instance() {
    return reinterpret_cast<const ExecutionReport*>(
               &_ExecutionReport_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(ExecutionReport* other);
  friend void swap(ExecutionReport& a, ExecutionReport& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExecutionReport* New() const final {
    return CreateMaybeMessage<ExecutionReport>(NULL);
  }

  ExecutionReport* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<ExecutionReport>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const ExecutionReport& from);
  void MergeFrom(const ExecutionReport& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ExecutionReport* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef ExecutionReport_STAT STAT;
  static const STAT ORDER_ACCEPT =
    ExecutionReport_STAT_ORDER_ACCEPT;
  static const STAT ORDER_REJECT =
    ExecutionReport_STAT_ORDER_REJECT;
  static const STAT FILL =
    ExecutionReport_STAT_FILL;
  static const STAT CANCELED =
    ExecutionReport_STAT_CANCELED;
  static const STAT CANCEL_REJECT =
    ExecutionReport_STAT_CANCEL_REJECT;
  static inline bool STAT_IsValid(int value) {
    return ExecutionReport_STAT_IsValid(value);
  }
  static const STAT STAT_MIN =
    ExecutionReport_STAT_STAT_MIN;
  static const STAT STAT_MAX =
    ExecutionReport_STAT_STAT_MAX;
  static const int STAT_ARRAYSIZE =
    ExecutionReport_STAT_STAT_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  STAT_descriptor() {
    return ExecutionReport_STAT_descriptor();
  }
  static inline const ::std::string& STAT_Name(STAT value) {
    return ExecutionReport_STAT_Name(value);
  }
  static inline bool STAT_Parse(const ::std::string& name,
      STAT* value) {
    return ExecutionReport_STAT_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string stockID = 4;
  void clear_stockid();
  static const int kStockIDFieldNumber = 4;
  const ::std::string& stockid() const;
  void set_stockid(const ::std::string& value);
  #if LANG_CXX11
  void set_stockid(::std::string&& value);
  #endif
  void set_stockid(const char* value);
  void set_stockid(const char* value, size_t size);
  ::std::string* mutable_stockid();
  ::std::string* release_stockid();
  void set_allocated_stockid(::std::string* stockid);

  // string errorMessage = 10;
  void clear_errormessage();
  static const int kErrorMessageFieldNumber = 10;
  const ::std::string& errormessage() const;
  void set_errormessage(const ::std::string& value);
  #if LANG_CXX11
  void set_errormessage(::std::string&& value);
  #endif
  void set_errormessage(const char* value);
  void set_errormessage(const char* value, size_t size);
  ::std::string* mutable_errormessage();
  ::std::string* release_errormessage();
  void set_allocated_errormessage(::std::string* errormessage);

  // string time = 11;
  void clear_time();
  static const int kTimeFieldNumber = 11;
  const ::std::string& time() const;
  void set_time(const ::std::string& value);
  #if LANG_CXX11
  void set_time(::std::string&& value);
  #endif
  void set_time(const char* value);
  void set_time(const char* value, size_t size);
  ::std::string* mutable_time();
  ::std::string* release_time();
  void set_allocated_time(::std::string* time);

  // uint64 clientID = 2;
  void clear_clientid();
  static const int kClientIDFieldNumber = 2;
  ::google::protobuf::uint64 clientid() const;
  void set_clientid(::google::protobuf::uint64 value);

  // uint64 orderID = 3;
  void clear_orderid();
  static const int kOrderIDFieldNumber = 3;
  ::google::protobuf::uint64 orderid() const;
  void set_orderid(::google::protobuf::uint64 value);

  // .OPS.ExecutionReport.STAT stat = 1;
  void clear_stat();
  static const int kStatFieldNumber = 1;
  ::OPS::ExecutionReport_STAT stat() const;
  void set_stat(::OPS::ExecutionReport_STAT value);

  // uint32 orderQty = 5;
  void clear_orderqty();
  static const int kOrderQtyFieldNumber = 5;
  ::google::protobuf::uint32 orderqty() const;
  void set_orderqty(::google::protobuf::uint32 value);

  // double orderPrice = 6;
  void clear_orderprice();
  static const int kOrderPriceFieldNumber = 6;
  double orderprice() const;
  void set_orderprice(double value);

  // double fillPrice = 8;
  void clear_fillprice();
  static const int kFillPriceFieldNumber = 8;
  double fillprice() const;
  void set_fillprice(double value);

  // uint32 fillQty = 7;
  void clear_fillqty();
  static const int kFillQtyFieldNumber = 7;
  ::google::protobuf::uint32 fillqty() const;
  void set_fillqty(::google::protobuf::uint32 value);

  // uint32 leaveQty = 9;
  void clear_leaveqty();
  static const int kLeaveQtyFieldNumber = 9;
  ::google::protobuf::uint32 leaveqty() const;
  void set_leaveqty(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:OPS.ExecutionReport)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr stockid_;
  ::google::protobuf::internal::ArenaStringPtr errormessage_;
  ::google::protobuf::internal::ArenaStringPtr time_;
  ::google::protobuf::uint64 clientid_;
  ::google::protobuf::uint64 orderid_;
  int stat_;
  ::google::protobuf::uint32 orderqty_;
  double orderprice_;
  double fillprice_;
  ::google::protobuf::uint32 fillqty_;
  ::google::protobuf::uint32 leaveqty_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_OrderProcessSystem_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// NewOrderRequest

// uint64 clientID = 1;
inline void NewOrderRequest::clear_clientid() {
  clientid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 NewOrderRequest::clientid() const {
  // @@protoc_insertion_point(field_get:OPS.NewOrderRequest.clientID)
  return clientid_;
}
inline void NewOrderRequest::set_clientid(::google::protobuf::uint64 value) {
  
  clientid_ = value;
  // @@protoc_insertion_point(field_set:OPS.NewOrderRequest.clientID)
}

// .OPS.NewOrderRequest.Direction direction = 2;
inline void NewOrderRequest::clear_direction() {
  direction_ = 0;
}
inline ::OPS::NewOrderRequest_Direction NewOrderRequest::direction() const {
  // @@protoc_insertion_point(field_get:OPS.NewOrderRequest.direction)
  return static_cast< ::OPS::NewOrderRequest_Direction >(direction_);
}
inline void NewOrderRequest::set_direction(::OPS::NewOrderRequest_Direction value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:OPS.NewOrderRequest.direction)
}

// string stockID = 3;
inline void NewOrderRequest::clear_stockid() {
  stockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NewOrderRequest::stockid() const {
  // @@protoc_insertion_point(field_get:OPS.NewOrderRequest.stockID)
  return stockid_.GetNoArena();
}
inline void NewOrderRequest::set_stockid(const ::std::string& value) {
  
  stockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPS.NewOrderRequest.stockID)
}
#if LANG_CXX11
inline void NewOrderRequest::set_stockid(::std::string&& value) {
  
  stockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OPS.NewOrderRequest.stockID)
}
#endif
inline void NewOrderRequest::set_stockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPS.NewOrderRequest.stockID)
}
inline void NewOrderRequest::set_stockid(const char* value, size_t size) {
  
  stockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPS.NewOrderRequest.stockID)
}
inline ::std::string* NewOrderRequest::mutable_stockid() {
  
  // @@protoc_insertion_point(field_mutable:OPS.NewOrderRequest.stockID)
  return stockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewOrderRequest::release_stockid() {
  // @@protoc_insertion_point(field_release:OPS.NewOrderRequest.stockID)
  
  return stockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewOrderRequest::set_allocated_stockid(::std::string* stockid) {
  if (stockid != NULL) {
    
  } else {
    
  }
  stockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stockid);
  // @@protoc_insertion_point(field_set_allocated:OPS.NewOrderRequest.stockID)
}

// uint32 orderQty = 4;
inline void NewOrderRequest::clear_orderqty() {
  orderqty_ = 0u;
}
inline ::google::protobuf::uint32 NewOrderRequest::orderqty() const {
  // @@protoc_insertion_point(field_get:OPS.NewOrderRequest.orderQty)
  return orderqty_;
}
inline void NewOrderRequest::set_orderqty(::google::protobuf::uint32 value) {
  
  orderqty_ = value;
  // @@protoc_insertion_point(field_set:OPS.NewOrderRequest.orderQty)
}

// double price = 5;
inline void NewOrderRequest::clear_price() {
  price_ = 0;
}
inline double NewOrderRequest::price() const {
  // @@protoc_insertion_point(field_get:OPS.NewOrderRequest.price)
  return price_;
}
inline void NewOrderRequest::set_price(double value) {
  
  price_ = value;
  // @@protoc_insertion_point(field_set:OPS.NewOrderRequest.price)
}

// .OPS.NewOrderRequest.OrderType orderType = 6;
inline void NewOrderRequest::clear_ordertype() {
  ordertype_ = 0;
}
inline ::OPS::NewOrderRequest_OrderType NewOrderRequest::ordertype() const {
  // @@protoc_insertion_point(field_get:OPS.NewOrderRequest.orderType)
  return static_cast< ::OPS::NewOrderRequest_OrderType >(ordertype_);
}
inline void NewOrderRequest::set_ordertype(::OPS::NewOrderRequest_OrderType value) {
  
  ordertype_ = value;
  // @@protoc_insertion_point(field_set:OPS.NewOrderRequest.orderType)
}

// string time = 7;
inline void NewOrderRequest::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& NewOrderRequest::time() const {
  // @@protoc_insertion_point(field_get:OPS.NewOrderRequest.time)
  return time_.GetNoArena();
}
inline void NewOrderRequest::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPS.NewOrderRequest.time)
}
#if LANG_CXX11
inline void NewOrderRequest::set_time(::std::string&& value) {
  
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OPS.NewOrderRequest.time)
}
#endif
inline void NewOrderRequest::set_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPS.NewOrderRequest.time)
}
inline void NewOrderRequest::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPS.NewOrderRequest.time)
}
inline ::std::string* NewOrderRequest::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:OPS.NewOrderRequest.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewOrderRequest::release_time() {
  // @@protoc_insertion_point(field_release:OPS.NewOrderRequest.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewOrderRequest::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:OPS.NewOrderRequest.time)
}

// -------------------------------------------------------------------

// CancelOrderRequest

// uint64 orderID = 1;
inline void CancelOrderRequest::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CancelOrderRequest::orderid() const {
  // @@protoc_insertion_point(field_get:OPS.CancelOrderRequest.orderID)
  return orderid_;
}
inline void CancelOrderRequest::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:OPS.CancelOrderRequest.orderID)
}

// string time = 2;
inline void CancelOrderRequest::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CancelOrderRequest::time() const {
  // @@protoc_insertion_point(field_get:OPS.CancelOrderRequest.time)
  return time_.GetNoArena();
}
inline void CancelOrderRequest::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPS.CancelOrderRequest.time)
}
#if LANG_CXX11
inline void CancelOrderRequest::set_time(::std::string&& value) {
  
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OPS.CancelOrderRequest.time)
}
#endif
inline void CancelOrderRequest::set_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPS.CancelOrderRequest.time)
}
inline void CancelOrderRequest::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPS.CancelOrderRequest.time)
}
inline ::std::string* CancelOrderRequest::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:OPS.CancelOrderRequest.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CancelOrderRequest::release_time() {
  // @@protoc_insertion_point(field_release:OPS.CancelOrderRequest.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CancelOrderRequest::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:OPS.CancelOrderRequest.time)
}

// -------------------------------------------------------------------

// ExecutionReport

// .OPS.ExecutionReport.STAT stat = 1;
inline void ExecutionReport::clear_stat() {
  stat_ = 0;
}
inline ::OPS::ExecutionReport_STAT ExecutionReport::stat() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.stat)
  return static_cast< ::OPS::ExecutionReport_STAT >(stat_);
}
inline void ExecutionReport::set_stat(::OPS::ExecutionReport_STAT value) {
  
  stat_ = value;
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.stat)
}

// uint64 clientID = 2;
inline void ExecutionReport::clear_clientid() {
  clientid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ExecutionReport::clientid() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.clientID)
  return clientid_;
}
inline void ExecutionReport::set_clientid(::google::protobuf::uint64 value) {
  
  clientid_ = value;
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.clientID)
}

// uint64 orderID = 3;
inline void ExecutionReport::clear_orderid() {
  orderid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ExecutionReport::orderid() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.orderID)
  return orderid_;
}
inline void ExecutionReport::set_orderid(::google::protobuf::uint64 value) {
  
  orderid_ = value;
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.orderID)
}

// string stockID = 4;
inline void ExecutionReport::clear_stockid() {
  stockid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecutionReport::stockid() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.stockID)
  return stockid_.GetNoArena();
}
inline void ExecutionReport::set_stockid(const ::std::string& value) {
  
  stockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.stockID)
}
#if LANG_CXX11
inline void ExecutionReport::set_stockid(::std::string&& value) {
  
  stockid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OPS.ExecutionReport.stockID)
}
#endif
inline void ExecutionReport::set_stockid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  stockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPS.ExecutionReport.stockID)
}
inline void ExecutionReport::set_stockid(const char* value, size_t size) {
  
  stockid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPS.ExecutionReport.stockID)
}
inline ::std::string* ExecutionReport::mutable_stockid() {
  
  // @@protoc_insertion_point(field_mutable:OPS.ExecutionReport.stockID)
  return stockid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecutionReport::release_stockid() {
  // @@protoc_insertion_point(field_release:OPS.ExecutionReport.stockID)
  
  return stockid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecutionReport::set_allocated_stockid(::std::string* stockid) {
  if (stockid != NULL) {
    
  } else {
    
  }
  stockid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stockid);
  // @@protoc_insertion_point(field_set_allocated:OPS.ExecutionReport.stockID)
}

// uint32 orderQty = 5;
inline void ExecutionReport::clear_orderqty() {
  orderqty_ = 0u;
}
inline ::google::protobuf::uint32 ExecutionReport::orderqty() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.orderQty)
  return orderqty_;
}
inline void ExecutionReport::set_orderqty(::google::protobuf::uint32 value) {
  
  orderqty_ = value;
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.orderQty)
}

// double orderPrice = 6;
inline void ExecutionReport::clear_orderprice() {
  orderprice_ = 0;
}
inline double ExecutionReport::orderprice() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.orderPrice)
  return orderprice_;
}
inline void ExecutionReport::set_orderprice(double value) {
  
  orderprice_ = value;
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.orderPrice)
}

// uint32 fillQty = 7;
inline void ExecutionReport::clear_fillqty() {
  fillqty_ = 0u;
}
inline ::google::protobuf::uint32 ExecutionReport::fillqty() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.fillQty)
  return fillqty_;
}
inline void ExecutionReport::set_fillqty(::google::protobuf::uint32 value) {
  
  fillqty_ = value;
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.fillQty)
}

// double fillPrice = 8;
inline void ExecutionReport::clear_fillprice() {
  fillprice_ = 0;
}
inline double ExecutionReport::fillprice() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.fillPrice)
  return fillprice_;
}
inline void ExecutionReport::set_fillprice(double value) {
  
  fillprice_ = value;
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.fillPrice)
}

// uint32 leaveQty = 9;
inline void ExecutionReport::clear_leaveqty() {
  leaveqty_ = 0u;
}
inline ::google::protobuf::uint32 ExecutionReport::leaveqty() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.leaveQty)
  return leaveqty_;
}
inline void ExecutionReport::set_leaveqty(::google::protobuf::uint32 value) {
  
  leaveqty_ = value;
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.leaveQty)
}

// string errorMessage = 10;
inline void ExecutionReport::clear_errormessage() {
  errormessage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecutionReport::errormessage() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.errorMessage)
  return errormessage_.GetNoArena();
}
inline void ExecutionReport::set_errormessage(const ::std::string& value) {
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.errorMessage)
}
#if LANG_CXX11
inline void ExecutionReport::set_errormessage(::std::string&& value) {
  
  errormessage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OPS.ExecutionReport.errorMessage)
}
#endif
inline void ExecutionReport::set_errormessage(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPS.ExecutionReport.errorMessage)
}
inline void ExecutionReport::set_errormessage(const char* value, size_t size) {
  
  errormessage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPS.ExecutionReport.errorMessage)
}
inline ::std::string* ExecutionReport::mutable_errormessage() {
  
  // @@protoc_insertion_point(field_mutable:OPS.ExecutionReport.errorMessage)
  return errormessage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecutionReport::release_errormessage() {
  // @@protoc_insertion_point(field_release:OPS.ExecutionReport.errorMessage)
  
  return errormessage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecutionReport::set_allocated_errormessage(::std::string* errormessage) {
  if (errormessage != NULL) {
    
  } else {
    
  }
  errormessage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), errormessage);
  // @@protoc_insertion_point(field_set_allocated:OPS.ExecutionReport.errorMessage)
}

// string time = 11;
inline void ExecutionReport::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExecutionReport::time() const {
  // @@protoc_insertion_point(field_get:OPS.ExecutionReport.time)
  return time_.GetNoArena();
}
inline void ExecutionReport::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OPS.ExecutionReport.time)
}
#if LANG_CXX11
inline void ExecutionReport::set_time(::std::string&& value) {
  
  time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OPS.ExecutionReport.time)
}
#endif
inline void ExecutionReport::set_time(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OPS.ExecutionReport.time)
}
inline void ExecutionReport::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OPS.ExecutionReport.time)
}
inline ::std::string* ExecutionReport::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:OPS.ExecutionReport.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExecutionReport::release_time() {
  // @@protoc_insertion_point(field_release:OPS.ExecutionReport.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExecutionReport::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:OPS.ExecutionReport.time)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace OPS

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::OPS::NewOrderRequest_OrderType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPS::NewOrderRequest_OrderType>() {
  return ::OPS::NewOrderRequest_OrderType_descriptor();
}
template <> struct is_proto_enum< ::OPS::NewOrderRequest_Direction> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPS::NewOrderRequest_Direction>() {
  return ::OPS::NewOrderRequest_Direction_descriptor();
}
template <> struct is_proto_enum< ::OPS::ExecutionReport_STAT> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::OPS::ExecutionReport_STAT>() {
  return ::OPS::ExecutionReport_STAT_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_OrderProcessSystem_2eproto
